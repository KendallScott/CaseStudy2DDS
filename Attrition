library(class)
library(caret)

clean_casestudy2 = data.frame(         
  Attrition=casestudy2$Attrition,
  Age = scale(casestudy2$Age), 
  JobInvolvement=scale(casestudy2$JobInvolvement),
  JobLevel=scale(casestudy2$JobLevel),
  Distance=scale(casestudy2$DistanceFromHome),
  StockOptionLevel=scale(casestudy2$StockOptionLevel),
  EnvironmentSatisfaction=scale(casestudy2$EnvironmentSatisfaction),
  RelationshipSatisfaction=scale(casestudy2$RelationshipSatisfaction),
  JobSatisfaction=scale(casestudy2$JobSatisfaction),
  YearSinceLastPromotion=scale(casestudy2$YearsSinceLastPromotion),
  YearsinCurrentRole=scale(casestudy2$YearsInCurrentRole),
  Education=scale(casestudy2$Education),
  TotalWorkingYears=scale(casestudy2$TotalWorkingYears))
  
  splitPerc = .65 #Training / Test split Percentage
  
  #confusion matrix results for each row
  masterAcc = matrix(nrow = numks)
  
  masterSens = matrix(nrow = numks)
  masterSpec = matrix(nrow = numks)
  
  numks = 60
  set.seed(1)
  i=1
  for(i in 1:numks)
  {
    trainIndices = sample(1:dim(clean_casestudy2)[1],round(splitPerc * dim(clean_casestudy2)[1]))
    train = clean_casestudy2[trainIndices,]
    test = clean_casestudy2[-trainIndices,]
    classifications = knn(train[,c(2,13)],test[,c(2,13)],as.factor(train$Attrition), prob = TRUE, k = i)
    table(as.factor(test$Attrition),classifications)
    CM = confusionMatrix(table(as.factor(test$Attrition),classifications))
    #results for accuracty, sensitivity, and specificity
    masterAcc[i] = CM$overall[1]
    masterSens[i]=CM[["byClass"]][["Sensitivity"]][1]
    masterSpec[i]=CM[["byClass"]][["Specificity"]][1]
  }
  Overall=cbind(masterAcc,masterSens, masterSpec)
  Overall=as.data.frame(Overall)
  #renaming CM column results
  Overall=rename(Overall, masterAcc=V1, masterSens=V2, masterSpec=V3)
  
  MeanAcc = colMeans(Overall)
  MeanAcc
  #based on results-- k=14 is the best selection
  
  trainIndices = sample(1:dim(clean_casestudy2)[1],round(splitPerc * dim(clean_casestudy2)[1]))
  train = clean_casestudy2[trainIndices,]
  test = clean_casestudy2[-trainIndices,]
  classifications = knn(train[,c(2,13)],test[,c(2,13)],as.factor(train$Attrition), prob = TRUE, k = 14)
  table(as.factor(test$Attrition),classifications)
  CM = confusionMatrix(table(as.factor(test$Attrition),classifications))
  CM
